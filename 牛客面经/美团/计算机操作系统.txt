乐观锁、悲观锁、死锁条件、缓存机制



===========

===========

===========

===========

===========

===========
进程间通信的方式大概有以下几种:

共享内存：顾名思义，共享内存就是两个进程同时共享一块内存，然后在这块内存上的数据可以共同修改和读取，
达到通信的目的；共享内存是最快的ipc方式；共享内存常与信号量进行配合使用，信号量是一个控制资源访问的标识符，
简单来说就是一个计数器，通过信号量能实现锁以及著名的pv操作等，主要是用来实现进程间同步。

无名管道：无名管道是半双工的通信方式；并且只能在具有亲缘关系的进程之间使用（亲缘关系是指进程间的父子关系，兄弟关系等），
具有亲缘关系的进程在创建时同时拥有一个无名管道的句柄，可以进行读写；无名管道不存在磁盘节点，只存在与内存中用完即销毁。

命名管道：命名管道也是半双工的通信方式；可以在不具有亲缘关系的进程间通信；有名管道存在磁盘节点，有对应的FIFO文件，
凡是可以访问该路径的文件的进程均可以进行通信。

消息队列：消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。消息队列克服了信号传递信息少、
管道只能承载无格式字节流以及缓冲区大小受限等缺点。

套接字：套接字是网络编程的api，通过套接字可以不同的机器间的进程进行通信，常用于客户端进程和服务器进程的通信。

信号：信号是Unix系统中使用的最古老的进程间通信的方法之一。操作系统通过信号来通知进程系统中发生了某种预先规定好的事件（一组事件中的一个），
它也是用户进程之间通信和同步的一种原始机制。一个键盘中断或者一个错误条件（比如进程试图访问它的虚拟内存中不存在的位置等）都有可能产生一个信号。
Shell也使用信号向它的子进程发送作业控制信号。
